import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Mydata {
    private String varName;
    private String value;

    public Mydata(String varName, String value) {
        this.varName = varName;
        this.value = value;
    }

    public String getVarName() {
        return varName;
    }

    public String getValue() {
        return value;
    }
}

class MydataOut {
    private String channel;
    private String A;
    private String B;
    private String C;
    private String D;
    private String E;
    private String F;

    public MydataOut(String channel, String A, String B, String C, String D, String E, String F) {
        this.channel = channel;
        this.A = A;
        this.B = B;
        this.C = C;
        this.D = D;
        this.E = E;
        this.F = F;
    }

    // Getters and setters (you can use Lombok or IDE-generated methods)
}

public class DatabaseRecords {
    public static void main(String[] args) {
        // Given ArrayList of Mydata objects
        ArrayList<Mydata> varNames = new ArrayList<>();
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.A", "123"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.B", "rudra"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.C", "hub"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.D", "math"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.E", "pune"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate1.F", "meena"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.A", "shweta"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.B", "sware"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.C", "ved"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.D", "ppu"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.E", "sola"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate2.F", "pur"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.A", "wag"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.B", "oli"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.C", "tempe"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.D", "fdfd"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.E", "daa"));
        varNames.add(new Mydata("$mq clint version.usqcds36_cdds_duplicate3.F", "papa"));

        // Process the records and build the output as List of MydataOut objects
        List<MydataOut> outputList = new ArrayList<>();
        Map<String, Map<String, String>> channelData = new HashMap<>();

        for (Mydata data : varNames) {
            String varName = data.getVarName();
            String value = data.getValue();

            String[] parts = varName.split("\\.");
            if (parts.length == 3) {
                String channel = parts[1].substring(parts[1].lastIndexOf("_") + 1);

                channelData.putIfAbsent(channel, new HashMap<>());
                channelData.get(channel).put(parts[2], value);
            }
        }

        for (Map.Entry<String, Map<String, String>> entry : channelData.entrySet()) {
            String channel = entry.getKey();
            Map<String, String> channelValues = entry.getValue();

            String A = channelValues.getOrDefault("A", "");
            String B = channelValues.getOrDefault("B", "");
            String C = channelValues.getOrDefault("C", "");
            String D = channelValues.getOrDefault("D", "");
            String E = channelValues.getOrDefault("E", "");
            String F = channelValues.getOrDefault("F", "");

            outputList.add(new MydataOut(channel, A, B, C, D, E, F));
        }

        // Print the header
        System.out.println("Channel,A,B,C,D,E,F");

        // Print the data
        for (MydataOut mydataOut : outputList) {
            System.out.println(
                    mydataOut.getChannel() + ","
                            + mydataOut.getA() + ","
                            + mydataOut.getB() + ","
                            + mydataOut.getC() + ","
                            + mydataOut.getD() + ","
                            + mydataOut.getE() + ","
                            + mydataOut.getF()
            );
        }
    }
}
